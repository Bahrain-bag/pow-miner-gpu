name: win64-pm-pmcuda-lc-compile.yml

on:
  push:
    tags:
    - '*'

defaults:
  run:
    shell: cmd
    
jobs:
  build:

    runs-on: windows-2019

    steps:
      - name: Get Current OS version
        run: |
          systeminfo | findstr /B /C:"OS Name" /C:"OS Version"

      - name: Install 7zip
        run: |
          curl -o 7z1900-x64.msi https://www.7-zip.org/a/7z1900-x64.msi
          msiexec /i 7z1900-x64.msi /quiet /qn /norestart          
            
      - name: Check out current repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          
      - name: Check out zlib repository
        uses: actions/checkout@v2
        with:
          repository: desktop-app/zlib
          path: zlib
          
      - name: Check out vcpkg repository
        uses: actions/checkout@v2
        with: 
            repository: microsoft/vcpkg
            path: vcpkg     
          
      - name: Setup msbuild.exe
        uses: microsoft/setup-msbuild@v1.0.3

      - uses: Jimver/cuda-toolkit@v0.2.4
        id: cuda-toolkit
        with:
            cuda: '11.4.0'

      - name: Show nvidia cuda toolkit version 
        run: |
          nvcc -V  
      
      - name: Compile zlib Win64
        run: |
          cd zlib\contrib\vstudio\vc14          
          msbuild zlibstat.vcxproj /p:Configuration=Debug /p:platform=x64        
          msbuild zlibstat.vcxproj /p:Configuration=ReleaseWithoutAsm /p:platform=x64

      - name: Configure vcpkg
        run: |
          cd vcpkg
          bootstrap-vcpkg.bat        
          vcpkg integrate install
          
      - name: Install vcpkg openssl pthread
        run: |
          cd vcpkg     
          vcpkg install openssl:x64-windows pthread:x64-windows
             
      - name: Generate cmake files
        run: |
          set root=%cd%
          echo %root%
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE=%root%/vcpkg/scripts/buildsystems/vcpkg.cmake -DMINERCUDA=true -DZLIB_FOUND=1 -DZLIB_INCLUDE_DIR=%root%\zlib -DZLIB_LIBRARY=%root%\zlib\contrib\vstudio\vc14\x64\ZlibStatReleaseWithoutAsm\zlibstat.lib -DCMAKE_CXX_FLAGS="/DTD_WINDOWS=1 /EHsc /bigobj /W0" -DCMAKE_BUILD_TYPE=Release ..
          
      - name: Compile pow-miner
        run: |       
          cd build
          cmake --build . --target pow-miner --config Release
        continue-on-error: true          
        
      - name: Compile pow-miner-cuda
        run: |       
          cd build
          cmake --build . --target pow-miner-cuda --config Release
        continue-on-error: true
        
      - name: Compile lite-client
        run: |       
          cd build
          cmake --build . --target lite-client --config Release
        continue-on-error: true
          
      - name: Show executables
        run: |
          cd build
          dir *.exe /a-D /S /B
           
      - name: Copy compiled binaries with dependencies 
        run: |
          mkdir deploy_dir
          
          copy /Y "build\crypto\Release\libcrypto-1_1-x64.dll"    "deploy_dir\"
          copy /Y "build\crypto\Release\pow-miner.exe"            "deploy_dir\"
          copy /Y "build\crypto\Release\pow-miner-cuda.exe"       "deploy_dir\"
          copy /Y "build\lite-client\Release\lite-client.exe"     "deploy_dir\"
          
          cd deploy_dir
          
          "%%ProgramFiles%%\7-Zip\7z.exe" a minertools-cuda-windows-x86-64.zip .\*         
      
      - name: Packing binary files to the GITHUB Release Tag
        uses: ncipollo/release-action@v1
        with:
            allowUpdates: true
            artifacts: deploy_dir\minertools-*
            token: ${{ secrets.GITHUB_TOKEN }}
